# Generated by Django 5.1.1 on 2024-11-05 04:50

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("inventory_management", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=180, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Carrier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=180, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Condition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(max_length=50)),
                ("condition", models.CharField(max_length=50)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Storage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("capacity", models.CharField(max_length=32, unique=True)),
            ],
        ),
        migrations.RemoveField(
            model_name="product",
            name="brand",
        ),
        migrations.RemoveField(
            model_name="product",
            name="screen",
        ),
        migrations.RemoveField(
            model_name="product",
            name="sidesAndBack",
        ),
        migrations.AlterField(
            model_name="product",
            name="battery_health",
            field=models.IntegerField(
                blank=True,
                default=100,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="fullyFunctional",
            field=models.BooleanField(blank=True, default=True, null=True),
        ),
        migrations.AlterField(
            model_name="product",
            name="repaired",
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AlterField(
            model_name="product",
            name="carrier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="inventory_management.carrier",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="screen_condition",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"category": "Screen"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="screen_products",
                to="inventory_management.condition",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="sides_and_back_condition",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"category": "SidesAndBack"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sides_back_products",
                to="inventory_management.condition",
            ),
        ),
        migrations.CreateModel(
            name="ProductModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=180)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="models",
                        to="inventory_management.brand",
                    ),
                ),
                (
                    "storage_options",
                    models.ManyToManyField(
                        related_name="product_models", to="inventory_management.storage"
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="product",
            name="model",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="inventory_management.productmodel",
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="storage_capacity",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="inventory_management.storage",
            ),
        ),
    ]
